name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Triggers pipeline on every push to the main branch
  pull_request:
    branches:
      - master  # Optionally run on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the NestJS application
      - name: Build the app
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # # Step 4: Copy the application to the server and deploy using SSH
      # - name: Deploy to server
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}         # Set the host in GitHub Secrets
      #     username: ${{ secrets.SERVER_USER }}     # Set the user in GitHub Secrets
      #     key: ${{ secrets.SERVER_SSH_KEY }}       # Set the private SSH key in GitHub Secrets
      #     port: 22                                 # Default SSH port
      #     script: |
      #       cd /path/to/your/project
      #       git pull origin main
      #       npm install
      #       npm run build
      #       pm2 restart all

      # Optional Step: Restart PM2 to pick up new changes
      - name: PM2 restart
        # run: pm2 restart
        uses: appleboy/ssh-action@v0.1.7
        # with:
        #   host: ${{ secrets.SERVER_HOST }}
        #   username: ${{ secrets.SERVER_USER }}
        #   key: ${{ secrets.SERVER_SSH_KEY }}
        #   port: 22
        #   script: pm2 restart all
